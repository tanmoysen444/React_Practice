{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Projects\\\\Form_Project\\\\my app code\\\\src\\\\components\\\\UserForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserForm(props) {\n  _s();\n\n  const [userData, setuserData] = useState({\n    username: \"\",\n    password: \"\"\n  }); // console.log(\"userData\",userData);\n\n  let updateUserData = event => {\n    setuserData({ ...userData,\n      // it shows that the ui form field is connected vise versa with the sate in which the value is stored and will get updated\n      [event.target.name]: event.target.value\n    });\n  };\n\n  let saveData = () => {\n    //  in this place do all the validation for form if required\n    // sending data to pafrent component\n    props.getDataFromForm(userData); // clearing the form after submit\n\n    setuserData({\n      username: \"\",\n      password: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"username\",\n      type: \"email\",\n      placeholder: \"Enter Email\",\n      value: userData.username,\n      onChange: event => {\n        updateUserData(event);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"password\" // type =\"password\" can also been done\n      ,\n      type: \"text\",\n      palceholder: \"Enter Password\",\n      value: userData.password,\n      onChange: event => {\n        updateUserData(event);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveData,\n      children: \" Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserForm, \"e0u/LNmTS9YsUhrRdhFYaPCOwkc=\");\n\n_c = UserForm;\nexport default UserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","UserForm","props","userData","setuserData","username","password","updateUserData","event","target","name","value","saveData","getDataFromForm"],"sources":["C:/React Projects/Form_Project/my app code/src/components/UserForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction UserForm(props) {\r\n    const [userData, setuserData] = useState({\r\n        username:\"\",\r\n        password:\"\",\r\n    });\r\n    // console.log(\"userData\",userData);\r\n\r\n    let updateUserData = (event) => {\r\n        setuserData({\r\n            ...userData,\r\n            // it shows that the ui form field is connected vise versa with the sate in which the value is stored and will get updated\r\n            [event.target.name] : event.target.value,\r\n        });\r\n    }\r\n\r\n    let saveData = ()=> {\r\n        //  in this place do all the validation for form if required\r\n        // sending data to pafrent component\r\n        props.getDataFromForm(userData);\r\n\r\n\r\n        // clearing the form after submit\r\n        setuserData ({\r\n            username:\"\",\r\n            password:\"\",\r\n        });\r\n    };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <h1>Login Form</h1>\r\n        <input \r\n        name= \"username\"\r\n        type=\"email\"\r\n        placeholder='Enter Email'\r\n        value={userData.username}\r\n        onChange={(event) => {\r\n            updateUserData(event);\r\n        }}\r\n\r\n        />\r\n\r\n        <input \r\n        name='password'\r\n        // type =\"password\" can also been done\r\n        type=\"text\"\r\n        palceholder=\"Enter Password\"\r\n        value = {userData.password}\r\n        onChange={(event) => {\r\n            updateUserData(event);\r\n        }}\r\n        />\r\n\r\n        <button onClick={saveData}> Login</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserForm;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACrB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC;IACrCK,QAAQ,EAAC,EAD4B;IAErCC,QAAQ,EAAC;EAF4B,CAAD,CAAxC,CADqB,CAKrB;;EAEA,IAAIC,cAAc,GAAIC,KAAD,IAAW;IAC5BJ,WAAW,CAAC,EACR,GAAGD,QADK;MAER;MACA,CAACK,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAsBF,KAAK,CAACC,MAAN,CAAaE;IAH3B,CAAD,CAAX;EAKH,CAND;;EAQA,IAAIC,QAAQ,GAAG,MAAK;IAChB;IACA;IACAV,KAAK,CAACW,eAAN,CAAsBV,QAAtB,EAHgB,CAMhB;;IACAC,WAAW,CAAE;MACTC,QAAQ,EAAC,EADA;MAETC,QAAQ,EAAC;IAFA,CAAF,CAAX;EAIH,CAXD;;EAcF,oBACE;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MACA,IAAI,EAAE,UADN;MAEA,IAAI,EAAC,OAFL;MAGA,WAAW,EAAC,aAHZ;MAIA,KAAK,EAAEH,QAAQ,CAACE,QAJhB;MAKA,QAAQ,EAAGG,KAAD,IAAW;QACjBD,cAAc,CAACC,KAAD,CAAd;MACH;IAPD;MAAA;MAAA;MAAA;IAAA,QAFJ,eAaI;MACA,IAAI,EAAC,UADL,CAEA;MAFA;MAGA,IAAI,EAAC,MAHL;MAIA,WAAW,EAAC,gBAJZ;MAKA,KAAK,EAAIL,QAAQ,CAACG,QALlB;MAMA,QAAQ,EAAGE,KAAD,IAAW;QACjBD,cAAc,CAACC,KAAD,CAAd;MACH;IARD;MAAA;MAAA;MAAA;IAAA,QAbJ,eAwBI;MAAQ,OAAO,EAAEI,QAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAxBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA4BD;;GAzDQX,Q;;KAAAA,Q;AA2DT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}