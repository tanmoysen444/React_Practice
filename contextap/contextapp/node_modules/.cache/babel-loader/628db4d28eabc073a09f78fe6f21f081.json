{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Projects\\\\contextap\\\\contextapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { UserProvider } from './context/Context';\nimport { useState } from 'react';\nimport ComponentA from './components/ComponentA';\nimport ComponentD from './components/ComponentD';\nimport { LoginProvider } from './context/LoginContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [uname, setuname] = useState(\"Google\");\n\n  let getDataFromComponentD = data => {\n    console.log(\"data in parent\", data);\n  };\n\n  const [loginData, setloginData] = useState({\n    username: \"Mukesh\",\n    // aslo getDataFromComponentD is enough if the key & value are same\n    getDataFromComponentD: getDataFromComponentD\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(LoginProvider, {\n      value: loginData,\n      children: /*#__PURE__*/_jsxDEV(ComponentD, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"d8x17MJVBAcS/qphx+HC+PjzBpk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","UserProvider","useState","ComponentA","ComponentD","LoginProvider","App","uname","setuname","getDataFromComponentD","data","console","log","loginData","setloginData","username"],"sources":["C:/React Projects/contextap/contextapp/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { UserProvider } from './context/Context';\nimport { useState } from 'react';\nimport ComponentA from './components/ComponentA';\nimport ComponentD from './components/ComponentD';\nimport { LoginProvider } from './context/LoginContext';\n\nfunction App() {\n  const [uname, setuname] = useState(\"Google\");\n\n  let getDataFromComponentD = (data) => {\n    console.log(\"data in parent\" , data);\n  };\n\n  const [loginData, setloginData] = useState({\n    username: \"Mukesh\",\n    // aslo getDataFromComponentD is enough if the key & value are same\n    getDataFromComponentD:getDataFromComponentD,\n  });\n\n  \n  return (\n    <div className=\"App\">\n      {/* context api way of sending props in order to over come props drilling\n      <UserProvider value={uname}> */}\n\n        {/* normal sending of props or Props Drilling */}\n       {/* <ComponentA uname={uname} />\n       </UserProvider> */}\n\n       {/* on click of a button uname will change to flipkart */}\n       {/* <button \n       onClick={()=>{\n         setuname(\"Flipkart\");\n       }}\n       >\n\n         Change name\n       </button> */}\n\n       <LoginProvider value ={loginData}>\n         <ComponentD />\n       </LoginProvider>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,aAAT,QAA8B,wBAA9B;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,QAAD,CAAlC;;EAEA,IAAIO,qBAAqB,GAAIC,IAAD,IAAU;IACpCC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA+BF,IAA/B;EACD,CAFD;;EAIA,MAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC;IACzCa,QAAQ,EAAE,QAD+B;IAEzC;IACAN,qBAAqB,EAACA;EAHmB,CAAD,CAA1C;EAOA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBAkBG,QAAC,aAAD;MAAe,KAAK,EAAGI,SAAvB;MAAA,uBACE,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAlBH;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD;;GAvCQP,G;;KAAAA,G;AAyCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}